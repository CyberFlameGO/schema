"use strict";(self.webpackChunkoverture_schema=self.webpackChunkoverture_schema||[]).push([[428],{5162:(e,t,n)=>{n.r(t),n.d(t,{default:()=>i});var a=n(7294),r=n(6010);const o={tabItem:"tabItem_Ymn6"};function i(e){let{children:t,hidden:n,className:i}=e;return a.createElement("div",{role:"tabpanel",className:(0,r.Z)(o.tabItem,i),hidden:n},t)}},4866:(e,t,n)=>{n.r(t),n.d(t,{default:()=>w});var a=n(7462),r=n(7294),o=n(6010),i=n(2466),s=n(6550),l=n(1980),p=n(7392),u=n(12);function c(e){return function(e){return r.Children.map(e,(e=>{if(!e||(0,r.isValidElement)(e)&&function(e){const{props:t}=e;return!!t&&"object"==typeof t&&"value"in t}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}(e).map((e=>{let{props:{value:t,label:n,attributes:a,default:r}}=e;return{value:t,label:n,attributes:a,default:r}}))}function d(e){const{values:t,children:n}=e;return(0,r.useMemo)((()=>{const e=t??c(n);return function(e){const t=(0,p.l)(e,((e,t)=>e.value===t.value));if(t.length>0)throw new Error(`Docusaurus error: Duplicate values "${t.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[t,n])}function m(e){let{value:t,tabValues:n}=e;return n.some((e=>e.value===t))}function h(e){let{queryString:t=!1,groupId:n}=e;const a=(0,s.k6)(),o=function(e){let{queryString:t=!1,groupId:n}=e;if("string"==typeof t)return t;if(!1===t)return null;if(!0===t&&!n)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return n??null}({queryString:t,groupId:n});return[(0,l._X)(o),(0,r.useCallback)((e=>{if(!o)return;const t=new URLSearchParams(a.location.search);t.set(o,e),a.replace({...a.location,search:t.toString()})}),[o,a])]}function g(e){const{defaultValue:t,queryString:n=!1,groupId:a}=e,o=d(e),[i,s]=(0,r.useState)((()=>function(e){let{defaultValue:t,tabValues:n}=e;if(0===n.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(t){if(!m({value:t,tabValues:n}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${t}" but none of its children has the corresponding value. Available values are: ${n.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return t}const a=n.find((e=>e.default))??n[0];if(!a)throw new Error("Unexpected error: 0 tabValues");return a.value}({defaultValue:t,tabValues:o}))),[l,p]=h({queryString:n,groupId:a}),[c,g]=function(e){let{groupId:t}=e;const n=function(e){return e?`docusaurus.tab.${e}`:null}(t),[a,o]=(0,u.Nk)(n);return[a,(0,r.useCallback)((e=>{n&&o.set(e)}),[n,o])]}({groupId:a}),f=(()=>{const e=l??c;return m({value:e,tabValues:o})?e:null})();(0,r.useLayoutEffect)((()=>{f&&s(f)}),[f]);return{selectedValue:i,selectValue:(0,r.useCallback)((e=>{if(!m({value:e,tabValues:o}))throw new Error(`Can't select invalid tab value=${e}`);s(e),p(e),g(e)}),[p,g,o]),tabValues:o}}var f=n(2389);const v={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};function k(e){let{className:t,block:n,selectedValue:s,selectValue:l,tabValues:p}=e;const u=[],{blockElementScrollPositionUntilNextRender:c}=(0,i.o5)(),d=e=>{const t=e.currentTarget,n=u.indexOf(t),a=p[n].value;a!==s&&(c(t),l(a))},m=e=>{let t=null;switch(e.key){case"Enter":d(e);break;case"ArrowRight":{const n=u.indexOf(e.currentTarget)+1;t=u[n]??u[0];break}case"ArrowLeft":{const n=u.indexOf(e.currentTarget)-1;t=u[n]??u[u.length-1];break}}t?.focus()};return r.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,o.Z)("tabs",{"tabs--block":n},t)},p.map((e=>{let{value:t,label:n,attributes:i}=e;return r.createElement("li",(0,a.Z)({role:"tab",tabIndex:s===t?0:-1,"aria-selected":s===t,key:t,ref:e=>u.push(e),onKeyDown:m,onClick:d},i,{className:(0,o.Z)("tabs__item",v.tabItem,i?.className,{"tabs__item--active":s===t})}),n??t)})))}function y(e){let{lazy:t,children:n,selectedValue:a}=e;const o=(Array.isArray(n)?n:[n]).filter(Boolean);if(t){const e=o.find((e=>e.props.value===a));return e?(0,r.cloneElement)(e,{className:"margin-top--md"}):null}return r.createElement("div",{className:"margin-top--md"},o.map(((e,t)=>(0,r.cloneElement)(e,{key:t,hidden:e.props.value!==a}))))}function b(e){const t=g(e);return r.createElement("div",{className:(0,o.Z)("tabs-container",v.tabList)},r.createElement(k,(0,a.Z)({},e,t)),r.createElement(y,(0,a.Z)({},e,t)))}function w(e){const t=(0,f.Z)();return r.createElement(b,(0,a.Z)({key:String(t)},e))}},446:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>k,contentTitle:()=>f,default:()=>T,frontMatter:()=>g,metadata:()=>v,toc:()=>y});var a=n(7462),r=(n(7294),n(3905)),o=n(814),i=n(4866),s=n(5162),l=n(941),p=n(4996);const u='---\nid: overture:transportation:example:geometric-scoping\ntype: Feature\ngeometry:\n  type: LineString\n  coordinates: [[0, 0], [1, 1]]\nproperties:\n  theme: transportation\n  type: segment\n  version: 0\n  updateTime: "2023-06-15T17:24:01-06:00"\n  subType: road\n  road:\n    restrictions:\n      speedLimits:\n        - at: [0, 0.15]\n          maxSpeed: [100, "km/h"]\n        - at: [0.15, 1]\n          maxSpeed: [60, "km/h"]\n',c='---\nid: overture:transportation:example:temporal-scoping\ntype: Feature\ngeometry:\n  type: LineString\n  coordinates:\n    - [-122.90019762265949, 49.20784664905824]\n    - [-122.9003738558948, 49.207833436710956]\n    - [-122.90052986564378, 49.207871186265805]\nproperties:\n  theme: transportation\n  type: segment\n  version: 0\n  updateTime: "2023-06-16T10:33:00-06:00"\n  subType: road\n  road:\n    restrictions:\n      access:\n        - denied: { during: "Mo-Fr 15:00-18:00" }\n          when: { notMode: [bus] }\n',d='---\nid: overture:transportation:example:subjective-usage-purpose-scoping\ntype: Feature\ngeometry:\n  type: LineString\n  coordinates:\n    - [-123.12700676422021, 49.279826628301635]\n    - [-123.12680748254229, 49.27995121574301]\nproperties:\n  theme: transportation\n  type: segment\n  version: 0\n  updateTime: "2023-06-16T10:33:00-06:00"\n  subType: road\n  road:\n    restrictions:\n      access:\n        - denied\n        - allowed:\n            when: { using: [asCustomer, atDestination] }\n',m='---\nid: overture:transportation:example:subjective-status-scoping\ntype: Feature\ngeometry:\n  type: LineString\n  coordinates:\n    - [-123.12791513926058, 49.287502049554945]\n    - [-123.12795068403449, 49.287522915661725]\n    - [-123.12797769806272, 49.28756882106529]\nproperties:\n  theme: transportation\n  type: segment\n  version: 0\n  updateTime: "2023-06-16T14:08:00-06:00"\n  subType: road\n  road:\n    restrictions:\n      access:\n        - denied\n        - allowed:\n            when: { recognized: [asPrivate] }\n',h='---\nid: overture:transportation:example:lanes-absolute\ntype: Feature\ngeometry:\n  type: LineString\n  coordinates:\n    - [-123.13174398677468, 49.28492173297815]\n    - [-123.13015725772073, 49.283923094445726]\nproperties:\n  theme: transportation\n  type: segment\n  version: 0\n  updateTime: "2023-06-16T15:33:00-06:00"\n  subType: road\n  road:\n    lanes:\n      - direction: backward\n      - direction: forward\n',g={},f="Scoped and Rule-Based Properties",v={unversionedId:"themes/transportation/scoping-rules",id:"themes/transportation/scoping-rules",title:"Scoped and Rule-Based Properties",description:"In the real-world, many facts and rules affecting transportation have",source:"@site/docs/themes/transportation/scoping-rules.mdx",sourceDirName:"themes/transportation",slug:"/themes/transportation/scoping-rules",permalink:"/themes/transportation/scoping-rules",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"docs",previous:{title:"Shape and Connectivity",permalink:"/themes/transportation/shape-connectivity"},next:{title:"Roads",permalink:"/themes/transportation/roads"}},k={},y=[{value:"Scoped values and Scoping properties",id:"scoped-values-and-scoping-properties",level:2},{value:"Geometric scoping (linear referencing)",id:"geometric-scoping-linear-referencing",level:3},{value:"Temporal scoping (opening hours)",id:"temporal-scoping-opening-hours",level:3},{value:"Subjective scoping",id:"subjective-scoping",level:3},{value:"Travel mode scoping",id:"travel-mode-scoping",level:4},{value:"Purpose of use scoping",id:"purpose-of-use-scoping",level:4},{value:"Status scoping (membership in a recognized group)",id:"status-scoping-membership-in-a-recognized-group",level:4},{value:"Vehicle attributes scoping",id:"vehicle-attributes-scoping",level:4},{value:"Rules and rule-based properties",id:"rules-and-rule-based-properties",level:2},{value:"Absolute form",id:"absolute-form",level:3},{value:"Rule evaluation algorithm",id:"rule-evaluation-algorithm",level:3}],b={toc:y},w="wrapper";function T(e){let{components:t,...n}=e;return(0,r.kt)(w,(0,a.Z)({},b,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"scoped-and-rule-based-properties"},"Scoped and Rule-Based Properties"),(0,r.kt)("p",null,"In the real-world, many facts and rules affecting transportation have\nonly a partial application, meaning they don't apply everywhere, or\nthey don't apply at all times, or to all travellers, or to all sets of\nexternal conditions. For example, access restrictions on a road segment\nmight not apply to all people or all kinds of vehicles, or they might\nvary according to the day of the week."),(0,r.kt)("p",null,"The Overture Transportation theme's schema model of the transportation\nnetwork uses two related concepts to capture the partial application of\nfacts and rules: Scoped values, and Rule-based properties."),(0,r.kt)("h2",{id:"scoped-values-and-scoping-properties"},"Scoped values and Scoping properties"),(0,r.kt)("p",null,"A ",(0,r.kt)("em",{parentName:"p"},"Scoped")," value is a value which only applies within a limited scope.\nMost scoped values are rules in the rule lists of\n",(0,r.kt)("a",{parentName:"p",href:"#rules-and-rule-based-properties"},"Rule-based properties"),". However,\nscoped values also exist outside of rule-based properties. For\nexample a signpost property belonging to a road segment might be\ngeometrically scoped to its position along the road."),(0,r.kt)("p",null,"The scope in which a scoped value applies is controlled by one or more\nspecial child properties of the value known as ",(0,r.kt)("em",{parentName:"p"},"Scoping")," properties."),(0,r.kt)("h3",{id:"geometric-scoping-linear-referencing"},"Geometric scoping (linear referencing)"),(0,r.kt)(i.default,{mdxType:"Tabs"},(0,r.kt)(s.default,{value:"description",label:"Description",default:!0,mdxType:"TabItem"},(0,r.kt)("p",null,"The geometric scoping property ",(0,r.kt)("inlineCode",{parentName:"p"},"at")," limits the scope of its parent value to a\nposition or range of positions along a Segment's geometry. When the parent value\nis a rule object, the rule only matches the position or range of positions\nspecified in the ",(0,r.kt)("inlineCode",{parentName:"p"},"at")," property."),(0,r.kt)("p",null,"Depending on context, the value of the ",(0,r.kt)("inlineCode",{parentName:"p"},"at")," property is either a single real\nnumber ",(0,r.kt)("inlineCode",{parentName:"p"},"a")," where ",(0,r.kt)("inlineCode",{parentName:"p"},"0")," ","\u2264"," ",(0,r.kt)("inlineCode",{parentName:"p"},"a")," ","\u2264"," ",(0,r.kt)("inlineCode",{parentName:"p"},"1"),"; or a pair of numbers ",(0,r.kt)("inlineCode",{parentName:"p"},"[a, b]")," where\n",(0,r.kt)("inlineCode",{parentName:"p"},"0")," ","\u2264"," ",(0,r.kt)("inlineCode",{parentName:"p"},"a")," ","<"," ",(0,r.kt)("inlineCode",{parentName:"p"},"b")," ","\u2264"," ",(0,r.kt)("inlineCode",{parentName:"p"},"1"),". In the first case, ",(0,r.kt)("inlineCode",{parentName:"p"},"at")," represents a discrete\nposition along the segment's geometry; in the second case it represents a\nrange of positions. The numbers ",(0,r.kt)("inlineCode",{parentName:"p"},"a")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"b")," are interpreted as percentage\ndisplacements along the parent segment's geometry starting from the start of the\nsegment. (",(0,r.kt)("em",{parentName:"p"},'The terms "start" and "end" are explained in\n',(0,r.kt)("a",{parentName:"em",href:"shape-connectivity"},"Shape and Connectivity"),"."),")"),(0,r.kt)("p",null,"So, for example, the scoping property ",(0,r.kt)("inlineCode",{parentName:"p"},'"at": 0.15')," scopes its parent value to\nthe position on the segment that is displaced 15% of the segment length from the\nstart."),(0,r.kt)("div",{style:{textAlign:"center"}},(0,r.kt)("figure",null,(0,r.kt)(l.Z,{alt:"Diagram showing a single geometrically-scoped position",sources:{light:(0,p.Z)("/img/transportation/geometric-scoping-position-light.svg"),dark:(0,p.Z)("/img/transportation/geometric-scoping-position-dark.svg")},mdxType:"ThemedImage"}),(0,r.kt)("figcaption",null,(0,r.kt)("div",{style:{textAlign:"center"}},(0,r.kt)("p",null,(0,r.kt)("em",{parentName:"p"},"The position along the segment geometry described by ",(0,r.kt)("inlineCode",{parentName:"em"},'"at": 0.15'),".")))))),(0,r.kt)("p",null,"The scoping property ",(0,r.kt)("inlineCode",{parentName:"p"},'"at": [0.35, 0.75]')," scopes its parent value to the range of\npositions on the segment beginning at 35% and extending to 75% of the segment\nlength from the start."),(0,r.kt)("div",{style:{textAlign:"center"}},(0,r.kt)("figure",null,(0,r.kt)(l.Z,{alt:"Diagram showing a geometrically-scoped range",sources:{light:(0,p.Z)("/img/transportation/geometric-scoping-range-light.svg"),dark:(0,p.Z)("/img/transportation/geometric-scoping-range-dark.svg")},mdxType:"ThemedImage"}),(0,r.kt)("figcaption",null,(0,r.kt)("div",{style:{textAlign:"center"}},(0,r.kt)("p",null,(0,r.kt)("em",{parentName:"p"},"The range on the segment geometry described by ",(0,r.kt)("inlineCode",{parentName:"em"},'"at": [0.35, 0.75]'),"."))))))),(0,r.kt)(s.default,{value:"example",label:"Example",default:!0,mdxType:"TabItem"},(0,r.kt)("p",null,"The example below shows a road segment whose speed limit is defined by\ntwo geometrically-scoped speed limit rules:"),(0,r.kt)(o.default,{language:"yaml",mdxType:"CodeBlock"},u))),(0,r.kt)("h3",{id:"temporal-scoping-opening-hours"},"Temporal scoping (opening hours)"),(0,r.kt)(i.default,{mdxType:"Tabs"},(0,r.kt)(s.default,{value:"description",label:"Description",default:!0,mdxType:"TabItem"},(0,r.kt)("p",null,"The temporal, or time-based, scoping property ",(0,r.kt)("inlineCode",{parentName:"p"},"during")," limits the scope of its\nparent value to one or more recurring time ranges. When the parent value is a\nrule object, the rule only matches the time range or time ranges specified in\nthe ",(0,r.kt)("inlineCode",{parentName:"p"},"during")," property."),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"during")," property must contain a string expressed in the OpenStreetMap\n",(0,r.kt)("a",{parentName:"p",href:"https://wiki.openstreetmap.org/wiki/Key:opening_hours/specification"},"opening hours specification"),".")),(0,r.kt)(s.default,{value:"example",label:"Example",default:!0,mdxType:"TabItem"},(0,r.kt)("p",null,"The example below shows a road segment with a temporally-scoped access\nrestriction rule. The rule states that non-bus travellers are prohibited\nfrom access to the segment on weekdays between 3PM and 6PM."),(0,r.kt)(o.default,{language:"yaml",mdxType:"CodeBlock"},c))),(0,r.kt)("h3",{id:"subjective-scoping"},"Subjective scoping"),(0,r.kt)("p",null,"Subjective scoping means that the scope of a property can be constrained based\non subjective factors like ",(0,r.kt)("em",{parentName:"p"},"who")," or ",(0,r.kt)("em",{parentName:"p"},"what")," is travelling on the transportation\nnetwork, or ",(0,r.kt)("em",{parentName:"p"},"how")," they are doing it."),(0,r.kt)("p",null,"The Overture transportation supports the following subjective factors:"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("a",{parentName:"li",href:"#travel-mode-scoping"},"Travel mode")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("a",{parentName:"li",href:"#purpose-of-use-scoping"},"Purpose of use")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("a",{parentName:"li",href:"#status-scoping-membership-in-a-recognized-group"},"Status, or membership in a recognized group")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("a",{parentName:"li",href:"#vehicle-attributes-scoping"},"Vehicle attributes"))),(0,r.kt)("p",null,"The sub-headings below explain each of these subjective factors in greater\ndetail."),(0,r.kt)("h4",{id:"travel-mode-scoping"},"Travel mode scoping"),(0,r.kt)("p",null,"A travel mode is a way of moving about the transportation network, for\nexample driving in a motor vehicle, or, more specifically, driving in a\nhigh-occupancy vehicle."),(0,r.kt)("p",null,"The property construct ",(0,r.kt)("inlineCode",{parentName:"p"},"when: { mode: [...] }")," limits the scope its\nparent value to apply only to people or things travelling using the\nlisted travel modes. Conversely, the construct\n",(0,r.kt)("inlineCode",{parentName:"p"},"when: { modeNot: [...] }")," scopes the parent value to apply only when\nthe traveller is ",(0,r.kt)("em",{parentName:"p"},"not")," using one of the listed travel modes."),(0,r.kt)("p",null,"To dive deeper into this topic, see the page on\n",(0,r.kt)("a",{parentName:"p",href:"travel-modes"},"Travel Modes"),"."),(0,r.kt)("h4",{id:"purpose-of-use-scoping"},"Purpose of use scoping"),(0,r.kt)(i.default,{mdxType:"Tabs"},(0,r.kt)(s.default,{value:"description",label:"Description",default:!0,mdxType:"TabItem"},(0,r.kt)("p",null,"Usage purpose scoping limits the scope of a parent value to apply only\nwhen the user is using the feature for one of the listed purposes. This\ntype of scoping is common when it matters that a person is in the\nprocess of doing something like making a delivery or acting as the\ncustomer of a business."),(0,r.kt)("p",null,"The property construct ",(0,r.kt)("inlineCode",{parentName:"p"},"when: { using: [...] }")," applies usage purpose\nscoping to a parent value.")),(0,r.kt)(s.default,{value:"example",label:"Example",default:!0,mdxType:"TabItem"},(0,r.kt)("p",null,"The example below shows a road segment representing a hotel driveway\nwhere through traffic is not permitted (only usage by hotel customers\nor as a final destination is allowed):"),(0,r.kt)(o.default,{language:"yaml",mdxType:"CodeBlock"},d))),(0,r.kt)("h4",{id:"status-scoping-membership-in-a-recognized-group"},"Status scoping (membership in a recognized group)"),(0,r.kt)(i.default,{mdxType:"Tabs"},(0,r.kt)(s.default,{value:"description",label:"Description",default:!0,mdxType:"TabItem"},(0,r.kt)("p",null,"Status scoping limits the scope of a parent value to apply only when the\nuser has a certain recognized status or is a member of a recognized\ngroup. This type of scoping is useful when it matters whether a person\nor thing has a recognized characteristic, such as holding a permit or\nbeing an employee of a business or student at an academic institution."),(0,r.kt)("p",null,"The property construct ",(0,r.kt)("inlineCode",{parentName:"p"},"when: { recognized: [...] }")," applies status\nscoping to a parent value.")),(0,r.kt)(s.default,{value:"example",label:"Example",default:!0,mdxType:"TabItem"},(0,r.kt)("p",null,"The example below shows a road segment modeling a private condominium\ntower driveway where access is denied to the general public, but allowed\nto privately-authorized individuals, such as condo unit owners:"),(0,r.kt)(o.default,{language:"yaml",mdxType:"CodeBlock"},m))),(0,r.kt)("h4",{id:"vehicle-attributes-scoping"},"Vehicle attributes scoping"),(0,r.kt)("p",null,"Vehicle attribute scoping limits the scope of a parent value to apply\nonly when the vehicle in use meets certain criteria."),(0,r.kt)("p",null,"The property construct ",(0,r.kt)("inlineCode",{parentName:"p"},"when: { vehicle: { ... } }")," applies vehicle\nattributes scoping to a parent value."),(0,r.kt)("p",null,"Note that vehicle attribute scoping can overlap to some degree with\n",(0,r.kt)("a",{parentName:"p",href:"#travel-mode-scoping"},"Travel mode scoping"),'. For example, some access\nrules may be scoped to the travel mode "heavy goods vehicle", while\nanother equivalent access rule could be scoped to the vehicle attribute\n"gross vehicle weight".'),(0,r.kt)("h2",{id:"rules-and-rule-based-properties"},"Rules and rule-based properties"),(0,r.kt)("p",null,"A ",(0,r.kt)("em",{parentName:"p"},"Rule-based")," property is a property whose value in a given situation is\ndetermined by evaluating a list of rules against the facts applicable to that\nsituation. Each individual rule in the list of rules is itself a scoped value,\na scoped value, and the assessment of which rule applies to a given set of facts\nis done by the rule evaluation algorithm."),(0,r.kt)("h3",{id:"absolute-form"},"Absolute form"),(0,r.kt)("p",null,"There are cases when specifying a property value using rules makes sense, and\ncases where doing so is unnecessarily complicated because the real-world entity\nbeing modeled has a single unchanging state which is the same in all fact\nsituations. In these cases, most rule-based properties support a simpler\nabsolute form without a list of rules."),(0,r.kt)("p",null,"Consider the following two examples of road segments. On the left is a section\nfrom a simple two-lane bidirectional city street in which there is always one\nlane of traffic flowing in each direction. On the right is a section from a\none-way city street in which one of the lanes is only available for driving at\ncertain times of the day, being reserved for parking at other times. In the\nexample on the left, the lane list is specified absolutely; while in the example\non the right, it is given as a list of ",(0,r.kt)("a",{parentName:"p",href:"#temporal-scoping-opening-hours"},"Temporally-scoped"),"\nlane rules."),(0,r.kt)("div",{style:{width:"49.5%",float:"left"}},(0,r.kt)("figure",null,(0,r.kt)(o.default,{language:"yaml",mdxType:"CodeBlock"},h),(0,r.kt)("figcaption",null,(0,r.kt)("div",{style:{textAlign:"center"}},(0,r.kt)("p",null,(0,r.kt)("em",{parentName:"p"},"An absolute list of lanes.")))))),(0,r.kt)("div",{style:{width:"49.5%",float:"right"}},(0,r.kt)("figure",null,(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},'---\nid: overture:transportation:example:lanes-rule\ntype: Feature\ngeometry:\n  type: LineString\n  coordinates:\n    - - -123.12244656918179\n      - 49.280940587393815\n    - - -123.12562968007902\n      - 49.27884862879665\nproperties:\n  theme: transportation\n  type: segment\n  version: 0\n  updateTime: "2023-06-16T15:57:00-06:00"\n  subType: road\n  road:\n    lanes:\n      - value:\n          - direction: forward\n          - direction: forward\n      - during: Mo-Fr 15:00-18:00\n        value:\n          - direction: forward\n          - direction: forward\n          - direction: forward\n          - direction: forward\n')),(0,r.kt)("figcaption",null,(0,r.kt)("div",{style:{textAlign:"center"}},(0,r.kt)("p",null,(0,r.kt)("em",{parentName:"p"},"A list of lane rules.")))))),(0,r.kt)("div",{style:{clear:"both"}}),(0,r.kt)("h3",{id:"rule-evaluation-algorithm"},"Rule evaluation algorithm"),(0,r.kt)("p",null,"Given a rule-based property, the actual value of the property in a given fact\npattern is determined by a three-step process: first, all matching rules are\nidentified; second, the single determining rule is chosen if possible; lastly,\nif there is no applicable rule, an appropriate default value may be assumed."),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("strong",{parentName:"li"},"Matching rules.")," For a given rule and a given set of facts, the rule\n",(0,r.kt)("em",{parentName:"li"},"matches")," the facts if the scope of the rule contains all the facts, ",(0,r.kt)("em",{parentName:"li"},"i.e."),"\nthe facts fit within all of the scoping properties expressed in the rule. The\nmatching criteria for a rule can be thought of as the logical AND of all the\nscoping properties expressed in the rule."),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("strong",{parentName:"li"},"Determining rule.")," For a given rule-based property and a given set of\nfacts, ",(0,r.kt)("em",{parentName:"li"},"at most")," one rule can ",(0,r.kt)("em",{parentName:"li"},"determine")," the property value. If only one\nrule matches, that rules determines the property value. If more than one rule\nmatches, the last matching rule in the list determines the value. (This is\nsimilar to how OpenStreetMap ",(0,r.kt)("a",{parentName:"li",href:"https://wiki.openstreetmap.org/wiki/Conditional_restrictions"},"conditional restrictions"),"\nevaluated.) Therefore it is important to write more general rules before more\nspecific ones in a rule list."),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("strong",{parentName:"li"},"Fallback to default.")," If there are no matching rules, an appropriate\ndefault value may apply, depending on the property being evaluated.")))}T.isMDXComponent=!0}}]);