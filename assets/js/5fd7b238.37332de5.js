"use strict";(self.webpackChunkoverture_schema=self.webpackChunkoverture_schema||[]).push([[901],{993:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>d,contentTitle:()=>a,default:()=>m,frontMatter:()=>r,metadata:()=>o,toc:()=>l});var i=n(5893),s=n(1151);const r={title:"Data model"},a=void 0,o={id:"overview/feature-model/index",title:"Data model",description:"Key specifications",source:"@site/docs/overview/feature-model/index.mdx",sourceDirName:"overview/feature-model",slug:"/overview/feature-model/",permalink:"/overview/feature-model/",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{title:"Data model"},sidebar:"docs",previous:{title:"Introduction",permalink:"/"},next:{title:"Names",permalink:"/overview/feature-model/names"}},d={},l=[{value:"Key specifications",id:"key-specifications",level:2},{value:"Common properties",id:"common-properties",level:2},{value:"Common definitions and specifications",id:"common-definitions-and-specifications",level:2},{value:"Data formats",id:"data-formats",level:2}];function c(e){const t={a:"a",code:"code",em:"em",h2:"h2",li:"li",p:"p",pre:"pre",ul:"ul",...(0,s.a)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.h2,{id:"key-specifications",children:"Key specifications"}),"\n",(0,i.jsxs)(t.p,{children:["Overture data is described by the ",(0,i.jsx)(t.a,{href:"https://www.ogc.org/standard/sfa/",children:(0,i.jsx)(t.em,{children:"simple feature model"})})," specified by the Open Geospatial Consortium. This means that each Overture ",(0,i.jsx)(t.em,{children:"entity"})," is represented as a single ",(0,i.jsx)(t.a,{href:"https://geojson.org/",children:"GeoJSON"})," feature: a geometric object with associated attributes and properties. For example, an ",(0,i.jsx)(t.em,{children:"entity"})," from the Overture buildings data theme might be represented in this way:"]}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-json",children:'{\n  "id": "08ba0085884a4fff0200ab2e3ad3f37c",\n  "type": "Feature",\n  "geometry": {\n    "type": "Polygon",\n    "coordinates": [\n      [ [-77.036873, 38.897804],\n        [-77.036873, 38.897559],\n        [-77.03626, 38.897559],\n        [-77.03626, 38.897804],\n        [-77.036873, 38.897804] ]\n    ]\n  },\n  "properties": {\n    "extFoo": "I am a customer user property.",\n    "extBar": "Me too!",\n    "theme": "buildings",\n    "type": "building",\n    "version": 1,\n    "level": 1,\n    "updateTime": "2023-06-06T10:30:00-08:00",\n    "height": 21.34,\n    "numFloors": 4,\n    "class": "civic",\n    "names": {\n      "primary": "Springfield Town Hall"\n    },\n    "sources": [\n      {\n        "property": "",\n        "dataset": "microsoftMLBuildings,"\n      },\n      {\n        "property": "/properties/height",\n        "dataset": "USGS Lidar"\n      }\n    ]\n  }\n}\n'})}),"\n",(0,i.jsx)(t.p,{children:"Note: Measurements use SI units (e.g. meters for building heights) and local units for regulations and restrictions (e.g. speed limits in mph in the US and km/h in Germany)."}),"\n",(0,i.jsx)(t.h2,{id:"common-properties",children:"Common properties"}),"\n",(0,i.jsxs)(t.p,{children:["The feature described above containes a polygon geometry and its metadata. Some properties within this metadata originate from Overture datasets and contributed datasets from Overture Foundation members, while other properties come from outside datasets that users bring to the table. Common properties available to all features are GERS ID, ",(0,i.jsx)(t.code,{children:"theme"}),". ",(0,i.jsx)(t.code,{children:"type"}),", and ",(0,i.jsx)(t.code,{children:"sources"}),". A few properties are shared across a subset of the ",(0,i.jsx)(t.code,{children:"themes"})," but aren't common across all themes. An example of this is ",(0,i.jsx)(t.code,{children:"level"}),", which is a property of line segment features in the buildings and transportation themes."]}),"\n",(0,i.jsx)(t.h2,{id:"common-definitions-and-specifications",children:"Common definitions and specifications"}),"\n",(0,i.jsx)(t.p,{children:"Some feature properties and attributes have common definitions and specifications that can be quite complex."}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsx)(t.li,{children:(0,i.jsx)(t.a,{href:"/gers/",children:"Global Entity Reference System (GERS) IDs"})}),"\n",(0,i.jsx)(t.li,{children:(0,i.jsx)(t.a,{href:"names",children:"Names"})}),"\n",(0,i.jsx)(t.li,{children:(0,i.jsx)(t.a,{href:"scoping-rules",children:"Scoped and rule-based properties"})}),"\n"]}),"\n",(0,i.jsxs)(t.p,{children:["Note: every Overture entity is assigned a GERS ID, but not every ",(0,i.jsx)(t.em,{children:"entity"})," has a names property or scoped and rule-based specifications of properties."]}),"\n",(0,i.jsx)(t.h2,{id:"data-formats",children:"Data formats"}),"\n",(0,i.jsxs)(t.p,{children:["Overture describes data using a GeoJSON mental model and represents data as GeoJSON features. Instead of releasing data in that format, Overture made the decision to distribute data as ",(0,i.jsx)(t.a,{href:"https://geoparquet.org/",children:"GeoParquet"}),", a format that is accessible to a wider range of developers, not just those with geospatial expertise. Throughout this documentation, we provide many examples of how to work with data stored in GeoParquet files."]})]})}function m(e={}){const{wrapper:t}={...(0,s.a)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(c,{...e})}):c(e)}}}]);